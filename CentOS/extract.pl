#!/usr/local/bin/perl -w
#use strict;
use warnings;
#$filename=$ARGV[0];
 
#@files = </newdisk/graphs201501271039/3-1_DBT1_PG940_c15_76000EU_i10000_tt36/db_log/numastat_verbose.out>;
@files = </mnt/vbox_share/results_main/*/*/numastat_verbose.out>;
foreach $file (@files) {

	open(my $fh, '<:encoding(UTF-8)', $file)
  	or die "Could not open file '$file' $!";
 
	#while (my $row = <$fh>) {
	#  chomp $row;
	#  print "$row\n";
	#}
	my $new_name = substr $file, 29, 30;
	my $new_file = "/newdisk/Results/$new_name.csv";
	open(my $new_fh, '>', $new_file) or die "Could not open file '$new_file' $!";
	#print $fh "My first report generated by perl\n";
	#close $fh;
	#print "done\n";
	#my $i = 1;
	while (my $line = <$fh>) {
        	chomp($line);

        	if ($line eq '') {
             		#Empty
        	} elsif ($line =~ /^(\d+)/) {
            		$unixtime_tmp = $1;
			#print "$unixtime_tmp,";
			#print scalar localtime($unixtime_tmp);
			($sec, $min, $hour, $day, $month, $year) = (localtime($unixtime_tmp))[0,1,2,3,4,5];
			#print $new_fh ($year+1900);
			#print $new_fh "-".($month+1)."-".$day;
			#printf($new_fh "%d,", $i);
			#$i = $i + 1;
			printf($new_fh "%02d-%02d-",$day,($month+1));
			printf($new_fh "%04d ",($year+1900));
			printf($new_fh "%02d:%02d:%02d,",$hour,$min,$sec);

        	} elsif ($line =~ /^Per-node numastat info/){ 

		#print "Per-node\n";
            	$linetmp = <$fh>; #Node0-Total
            	$linetmp = <$fh>; #--------

		#print "$linetmp\n";
            	#Numa_Hit,Numa_Miss,Numa_Foreign,Interleave_Hit,Local_Node,Other_Node

		#Numa_Hit
            	$linetmp = <$fh>;
            	$linetmp =~ s/\s+/,/g;
            	@list_hit = split(/,/,$linetmp);
#		print $new_fh "$list_hit[1],$list_hit[2],$list_hit[3],$list_hit[4],$list_hit[17]\n";

		#Numa_Miss
            	$linetmp = <$fh>;
            	$linetmp =~ s/\s+/,/g;
            	@list_mis = split(/,/,$linetmp);
#		print $new_fh "$list_mis[1],$list_mis[2],$list_mis[3],$list_mis[4],$list_mis[17]\n";

		#Numa_Foreign
            	$linetmp = <$fh>;
            	$linetmp =~ s/\s+/,/g;
            	@list_for = split(/,/,$linetmp);
#		print $new_fh "$list_for[1],$list_for[2],$list_for[3],$list_for[4],$list_for[17]\n";

		#Interleave_Hit
            	$linetmp = <$fh>;
            	$linetmp =~ s/\s+/,/g;
            	@list_int = split(/,/,$linetmp);
#		print $new_fh "$list_int[1],$list_int[2],$list_int[3],$list_int[4],$list_int[17]\n";

		#Local_Node
            	$linetmp = <$fh>;
            	$linetmp =~ s/\s+/,/g;
            	@list_loc = split(/,/,$linetmp);
#		print $new_fh "$list_loc[1],$list_loc[2],$list_loc[3],$list_loc[4],$list_loc[17]\n";

		#Other_Node
            	$linetmp = <$fh>;
            	$linetmp =~ s/\s+/,/g;
            	@list_oth = split(/,/,$linetmp);
		print $new_fh "$list_oth[1],$list_oth[2],$list_oth[3],$list_oth[4],$list_oth[17]\n";

		}
	}
	close($new_fh);
	close($fh);

}
